
# Most of these aliases are ment to log the history of the repo in some aspect.

[alias]
    # list all git alias
    la = "!git config -l | grep alias | cut -c 7-"

    # Log with a single line -> commit-hash description [author]
    ls = log --pretty=format:'%C(bold yellow)%h%C(bold red)%d %Creset%s%C(bold blue) [%cn]' --decorate

    # Log with a longer version showing the description and then a list of all changed files and their total
    # number of additions and deletions
    ll = log --pretty=format:'%C(bold yellow)%h%C(bold red)%d %Creset%s%C(bold blue) [%cn]' --decorate --numstat

    # Different format of the ll log
    lf = log --format=format:'%C(bold cyan)%ar %C(reset) %C(green)%f' --name-status

    # Show a graph of all heads of branches local and remote
    sl = log --graph --pretty=format:'%C(auto)%h%Creset%C(auto)%d%Creset %s %C(magenta bold)(%cr)%Creset %C(cyan)<%aN>%Creset' --all --simplify-by-decoration

    # Show a list of local branches
    lb = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

    # Show a local graph of your current repo
    lg = log --graph --pretty=format:'%C(bold red)%h%Creset -%C(bold yellow)%d%Creset %s %C(bold green)(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --all

    # Show details of the last commit
    last = "!f() { git log -${1:-1} --stat ; } ; f"

    # View the log and diff for a commit (previous if no SHA1 provided)
    details = log -n1 -p --format=fuller

    # View the tree with only the decorations
    show-tree = log --graph --decorate  --oneline --simplify-by-decoration --all

# vim: ft=gitconfig:
