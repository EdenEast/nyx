
# Most of these aliases are ment to log the history of the repo in some aspect.

[alias]
    # Short hands for longer defined log aliases
    ls = log-single-lines
    ll = log-long-files-change-numbers
    lg = log-graph-long
    lgs = log-graph-short
    show-tree = log-graph-short

    # Log with a single line -> commit-hash description [author]
    # Show log of changes in oneline single chanegs. (Short: `ls`)
    #
    # Example:
    #
    #   99cb7bb (HEAD -> master) feat(git) Add patching aliases [James Simpson]
    #   b7699ef feat(git): Rebase alias now handles working dir [James Simpson]
    log-single-lines = log --pretty=format:'%C(bold yellow)%h%C(bold red)%d %Creset%s%C(bold blue) [%cn]' --decorate

    # Log with a longer version showing the description and then a list of all changed files and their total
    # number of additions and deletions. (Short: `ll`)
    #
    # Example:
    #
    #  99cb7bb (HEAD -> master) feat(git) Add patching aliases [James Simpson]
    #  12      0       home/files/.config/git/cfg/alias/diff.conf
    #
    #  b7699ef feat(git): Rebase alias now handles working dir [James Simpson]
    #  11      4       home/files/.config/git/cfg/alias/rebase.conf
    log-long-files-change-numbers = log --pretty=format:'%C(bold yellow)%h%C(bold red)%d %Creset%s%C(bold blue) [%cn]' --decorate --numstat

    # Log by displaying the commit graph in a graph format
    #
    # Example:
    #
    # * 4b1a3e7 - feat(git): Heuristic to choose the proper git wrapper (3 days ago) <James Simpson>
    # * 930b6cd - feat: Use hub as git wrapper (3 days ago) <James Simpson>
    # | * dfbd1a6 - (origin/feat/fish, feat/fish) SAVEPOINT (3 days ago) <James Simpson>
    # |/
    # * 54f25a0 - feat(nvim): Add glow to neovim (4 days ago) <James Simpson>
    log-graph-long = log --graph --pretty=format:'%C(bold red)%h%Creset -%C(bold yellow)%d%Creset %s %C(bold green)(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --all


    # Log all heads of refs in a graph form. Refs are both local and remote
    #
    # Example:
    #
    # * 99cb7bb (HEAD -> master) feat(git) Add patching aliases (46 minutes ago) <James Simpson>
    # * 643cb8f (origin/master, origin/HEAD) refactor(git): Update update aliases (16 hours ago) <James Simpson>
    # | * dfbd1a6 (origin/feat/fish, feat/fish) SAVEPOINT (3 days ago) <James Simpson>
    # |/
    # | * 1a1d445 (origin/feat/multi-users) feat: Add users (9 days ago) <James Simpson>
    # |/
    # * 74437b7 Initial commit (3 months ago) <James Simpson>
    log-graph-short = log --graph --decorate  --oneline --simplify-by-decoration --all
    # log-graph-short = log --graph --pretty=format:'%C(auto)%h%Creset%C(auto)%d%Creset %s %C(magenta bold)(%cr)%Creset %C(cyan)<%aN>%Creset' --all --simplify-by-decoration

    # Show the log of the recent hour, day, week, month, year
    log-hour  = log --since=1-hour-ago
    log-day   = log --since=1-day-ago
    log-week  = log --since=1-week-ago
    log-month = log --since=1-month-ago
    log-year  = log --since=1-year-ago

    # Show the log of my own recent hour, day, week, month, year
    log-my-hour  = log --author $(git config user.email) --since=1-hour-ago
    log-my-day   = log --author $(git config user.email) --since=1-day-ago
    log-my-week  = log --author $(git config user.email) --since=1-week-ago
    log-my-month = log --author $(git config user.email) --since=1-month-ago
    log-my-year  = log --author $(git config user.email) --since=1-year-ago

    # List all git aliases. Searches aliases if argument is passed
    la = "!f() { \
        [[ $# -eq 0 ]] && { \
            git config -l | grep \"^alias\" | cut -c 7- ; \
        } || { \
            git config -l | grep \"^alias\" | cut -c 7- | grep \"$1\" --color=always | less ; \
        } ;\
    }; f"

# vim: ft=gitconfig:
