
# These aliases are mostly to help show the status of the repository.

[alias]
    # Branch status - Output the ahead/behind status of the current branch relative to
    # base-remote/default. Useful when trying to get branch ready to be merged into base-remote/default.
    branch-status = !"f() { \
        git rev-list --left-right --count $(git base-remote)/$(git default)...$(git branch-name) | \
        sed -En 's@([[:digit:]]+)[^[:digit:]]+([[:digit:]]+)@[Behind: \\1 | Ahead: \\2]@p'; \
    }; f"
    bs = !git branch-status

    # Local status - Output the status of the current local branch relative to the remote branch.
    local-status = !"f() { \
        CURRENT_BRANCH=\"$(git branch-name)\"; \
        CURRENT_REMOTE=\"$(git config branch.$CURRENT_BRANCH.remote)\"; \
        CURRENT_MERGE_BRANCH=\"$(git config branch.$CURRENT_BRANCH.merge | cut -d / -f 3)\"; \
        git rev-list --left-right --count $CURRENT_REMOTE/$CURRENT_MERGE_BRANCH...$CURRENT_BRANCH | \
        sed -En 's@([[:digit:]]+)[^[:digit:]]+([[:digit:]]+)@[Behind: \\1 | Ahead: \\2]@p'; \
    }; f"

    # Show the commits in your local branch that are ahead of base-remote/default.
    # Optional log args are passed to the log call.
    ahead = !"f() { git log $(git base-remote)/$(git default)..$(git branch-name) --decorate $@; }; f"

    # Show the commits that your local branch is behind of base-remote/default.
    # Optional log args are passed to the log call.
    behind = !"f() { git log $(git branch-name)..$(git base-remote)/$(git default) --decorate $@; }; f"

    # Show the commits that are incoming into the local branch
    # Optional log args are passed to the log call.
    incoming = !"f() { git remote update --prune; git log ..@{upstream} --decorate $@; }; f"

    # Show the commits that are to be pushed to remote
    # Optional log args are passed to the log call.
    outgoing = log @{upstream}.. --decorate

    # Show details of the last commit
    last = "!f() { git log -${1:-1} --stat ; } ; f"

    # View the log and diff for a commit (previous if no SHA1 provided)
    details = log -n1 -p --format=fuller

# vim: ft=gitconfig:
