
# Most of the basic shorthands for things that I do all the time.

[alias]
    # One letter aliases for most frequent commands
    a = add
    b = branch
    c = commit
    d = diff
    f = fetch --all
    l = log
    m = merge
    o = checkout
    p = pull
    r = rebase
    s = status -s
    t = tag
    w = whatchanged


    # Short aliases for frequent commands and operations
    #
    # Guildlines:
    #   - The alias should be in the same order as the command name followed by the options
    #
    #     - Correct: fb = foo --bar
    #     - Wrong:   bf = foo --bar

    # Add -----------------------------------------------------------------------------------------

    # Add all
    aa = add --all

    # Add by patch - look at each change, and check if stage
    ap = add --patch

    # Add just files that have been updated
    au = add --update

    # Bisect --------------------------------------------------------------------------------------

    bi = bisect
    big = bisect good
    bib = bisect bad

    # Branch --------------------------------------------------------------------------------------

    # List all branches that are reachable from specified commit (default HEAD)
    bm = branch --merged

    # List all branches whose tips are not reachable from specified commit (default HEAD)
    bnm = branch --no-merged

    # List all verbose local and remote branches
    bv = branch -av

    # Commit --------------------------------------------------------------------------------------

    # commit - add all changed modified changes to staging area before commmit
    ca = commit -a

    # commit - amend the tip of the current branch rather than creating a new commit.
    cam = commit --amend

    # commit - amend the tip of the current branch, and do not edit the message.
    cane = commit --amend --no-edit

    # commit interactive
    ci = commit --interactive

    # commit with a message
    cm = commit --message

    # Checkout ------------------------------------------------------------------------------------

    co = checkout

    # checkout - checkout default branch
    cod = "!git checkout $(git default)"

    # checkout - checkout a branch searching though fzf
    cob = "!BRANCH=$(git search-branch) && git checkout $BRANCH"

    # checkout - checkout a commit using fzf and checkout to detached head state
    coc = "!COMMIT=$(git search-commit) && git checkout $COMMIT"

    # Cherry pick ---------------------------------------------------------------------------------

    # cherry-pick - apply the changes introduced by some existing commits; useful for moving small
    # chunks of code between branches.
    cp = cherry-pick

    # cherry-pick - abort the picking process
    cpa = cherry-pick --abort

    # cherry-pick - continue the picking process
    cpc = cherry-pick --continue

    # Clean ---------------------------------------------------------------------------------------

    # clean - remove all files that are not in version control. (recursive)
    cl = clean -fd

    # clean - remove all files that are not tracked by git including ignore files. Leaves repo in a
    # new clone state. This includes submodules
    clx = clean -ffdx

    # Clone ---------------------------------------------------------------------------------------

    cn = clone

    # clone - recurse submodules and initialize and update
    cnr = clone --recurse-submodules -j8

    # Diff ----------------------------------------------------------------------------------------

    # diff - show changes in staging area
    dc = diff --cached

    # diff - show changes with perfered options
    dd = diff --check --dirstat --find-copies --find-renames --histogram --color

    # diff - show change but by word
    dw = diff --color-words

    # Push / Pull ---------------------------------------------------------------------------------

    # pull - pull and only allow with fast forward only
    pl = pull --ff-only

    # push
    pu = push

    # push - force push
    puf = push --force-with-lease

    # Reset ---------------------------------------------------------------------------------------

    # reset - Reset changes to HEAD; I quit (qq) and reset to HEAD
    qq = reset --hard

    # ---------------------------------------------------------------------------------------------

# vim: ft=gitconfig et:
