#!/bin/bash

branch_list=()
behind_list=()
ahead_list=()

largest_branch_name=0
largest_behind=0
largest_ahead=0

function main()
{
    # try and update git remote if connected to the internet
    git fetch -nq &>/dev/null

    local default = git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin}/@@'

    local remote_list=$(git branch --no-color -r | grep -v 'HEAD ->' | grep -v 'origin/$default')
    for r in ${remote_list[@]}; do
        local result=$(git rev-list --left-right --count origin/$default...$r)
        local ahead=$(echo $result | awk '{ print $2 }')
        local behind=$(echo $result | awk '{ print $1 }')

        local name_len=${#r}
        local ahead_len=${#behind}
        local behind_len=${#behind}

        [[ $largest_branch_name -lt $name_len ]] && largest_branch_name=$name_len
        [[ $largest_ahead -lt $ahead_len ]] && largest_ahead=$ahead_len
        [[ $largest_behind -lt $behind_len ]] && largest_behind=$behind_len

        branch_list+=($r)
        ahead_list+=($ahead)
        behind_list+=($behind)
    done

    largest_branch_name=$(($largest_branch_name + 1))
    largest_ahead=$(($largest_ahead + 1))
    largest_behind=$(($largest_behind + 1))

    local index=0
    local total=$(($largest_branch_name + $largest_ahead + $largest_behind))
    while [[ $index -lt ${#branch_list[@]} ]] ; do
        local result=${branch_list[$index]}
        local ahead=${ahead_list[$index]}
        local behind=${behind_list[$index]}

        local name_diff=$(($largest_branch_name - ${#result}))
        local ahead_diff=$(($largest_ahead - ${#ahead}))
        local behind_diff=$(($largest_behind - ${#behind}))

        printf "$result"
        printf '%0.s ' $(seq 1 $name_diff)
        printf "[ Behind:"
        printf '%0.s ' $(seq 1 $behind_diff)
        printf "$behind | Ahead:"
        printf '%0.s ' $(seq 1 $ahead_diff)
        printf "$ahead ]\n"

        index=$(($index + 1))
    done
}

main "$@"
